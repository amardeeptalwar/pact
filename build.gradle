	buildscript {
    ext {
        springBootVersion = '1.3.2.RELEASE'
    }
    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "se.transmode.gradle:gradle-docker:1.2"
        classpath "org.ajoberstar:grgit:1.1.0"
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1"
        classpath ("au.com.dius:pact-jvm-provider-gradle_2.10:2.2.7")
        classpath("com.github.jengelman.gradle.plugins:gradle-processes:0.3.0")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'maven'
apply plugin: 'au.com.dius.pact'
apply plugin: 'com.github.johnrengelman.processes'

version = '1.0.1'

jar {
    baseName = 'api-gateway'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

 dependencyManagement {
        imports { mavenBom 'org.springframework.cloud:spring-cloud-starter-parent:Brixton.M5' }
    }

dependencies {

      compile("org.springframework.boot:spring-boot-starter-web"){ exclude module: "spring-boot-starter-tomcat" }
        compile("org.springframework.boot:spring-boot-starter-jetty")
        compile("org.springframework.boot:spring-boot-starter-actuator")
        compile("org.springframework.hateoas:spring-hateoas")

        compile("org.springframework.cloud:spring-cloud-spring-service-connector")
        compile("org.springframework.cloud:spring-cloud-localconfig-connector")
        compile("org.springframework.cloud:spring-cloud-cloudfoundry-connector")
        compile("org.springframework.cloud:spring-cloud-starter-eureka")
        compile("org.springframework.cloud:spring-cloud-starter-zuul")
        compile("org.springframework.cloud:spring-cloud-starter-feign")

        compile("org.springframework.boot:spring-boot-starter-data-rest")


    compile("com.netflix.hystrix:hystrix-core")
    compile "io.springfox:springfox-swagger2:2.4.0"
    compile("io.reactivex:rxjava")
    compile("com.shazam:shazamcrest:0.11")
    compile 'io.springfox:springfox-swagger-ui:2.4.0'

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("au.com.dius:pact-jvm-consumer-junit_2.11:2.1.13")
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

pact {
    publish {
        pactDirectory = 'C:/cloud/meetup/composite/api-gateway/target/pacts'
        pactBrokerUrl = 'http://localhost:8085'
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
